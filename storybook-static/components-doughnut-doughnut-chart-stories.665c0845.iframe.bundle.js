(self.webpackChunk_mozaic_ds_angular_chart=self.webpackChunk_mozaic_ds_angular_chart||[]).push([[910],{"./src/services/chart-common-legend.service.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{qR:()=>ChartCommonLegendService});var tslib__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_pattern_service__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/services/pattern.service.ts"),_format_utilities_service__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/services/format-utilities.service.ts");let ChartCommonLegendService=class ChartCommonLegendService{patternService;formatUtilitiesService;constructor(patternService,formatUtilitiesService){this.patternService=patternService,this.formatUtilitiesService=formatUtilitiesService}getHtmlLegendPlugin(legendContainer,selectMode,onHoverIndex,disableAccessibility,patternsColors,patternsList,enableHoverFeature,maxValueToDisplay,chartData){const chartLegendService=this;return{id:"htmlLegend",afterUpdate(chart){const flexDirection="doughnut"===chart.config.type?"column":"row",ul=chartLegendService.getOrCreateLegendList(legendContainer,flexDirection);for(ul.style.margin="1.375rem 1.0625rem";ul.firstChild;)ul.firstChild.remove();chart.options.plugins.legend.labels.generateLabels(chart).forEach((item=>{const isDoughnut="doughnut"===chart.config.type,index=isDoughnut?item.index:item.datasetIndex,li=chartLegendService.createHtmlLegendListElement(chart,selectMode,index);if(isDoughnut){const isOthersElement=index+1===maxValueToDisplay;li.style.marginTop="12px",isOthersElement&&(li.style.position="relative")}else li.style.marginRight="10px";let liContent;li.style.width="max-content",li.style.cursor="pointer",liContent=selectMode.value?chartLegendService.createLegendElementWithCheckbox(chart,item,selectMode,onHoverIndex,patternsColors,enableHoverFeature):chartLegendService.createLegendElementWithPatterns(item,chart,onHoverIndex,disableAccessibility,patternsColors,patternsList,enableHoverFeature),liContent.style.boxSizing="border-box",li.appendChild(liContent),li.appendChild(chartLegendService.createHtmlLegendItemText(item)),isDoughnut&&maxValueToDisplay&&chartLegendService.hasOthersTooltipToDisplay(chartData,maxValueToDisplay,index)&&li.appendChild(chartLegendService.createTooltipAndItsIcon(chartData,maxValueToDisplay)),ul.appendChild(li)}))}}}hasOthersTooltipToDisplay(doughnutData,maxValueToDisplay,index){return doughnutData.data.length>maxValueToDisplay&&index===maxValueToDisplay-1}getOrCreateLegendList(legendContainer,flexDirection){let listContainer=legendContainer?.value?.querySelector("ul");return listContainer||(listContainer=document.createElement("ul"),listContainer.style.display="flex",listContainer.style.flexDirection=flexDirection,listContainer.style.margin="0",listContainer.style.padding="0",legendContainer.value?.appendChild(listContainer)),listContainer}createHtmlLegendListElement(chart,selectMode,elementIndex){const li=document.createElement("li");return li.style.alignItems="center",li.style.cursor=selectMode.value?"":"pointer",li.style.display="flex",li.style.flexDirection="row",li.setAttribute("data-test-id",`legend-item-${elementIndex}`),li.onclick=()=>{selectMode.value?this.switchItemVisibility(chart,elementIndex,selectMode):(this.hideAllButThis(chart,elementIndex,selectMode),chart.update())},li}hideAllButThis(chart,elementIndex,selectMode){if(!selectMode.value){const dataSets=this.getChartsData(chart);selectMode.next(!0),dataSets.forEach(((_data,index)=>{index!==elementIndex&&this.switchItemVisibility(chart,index)}))}}switchItemVisibility(chart,elementIndex,selectMode){this.isMonoDataSetChart(chart)?chart.toggleDataVisibility(elementIndex):chart.setDatasetVisibility(elementIndex,!chart.isDatasetVisible(elementIndex)),selectMode&&this.allDataVisible(chart)&&selectMode.next(!1),chart.update()}createLegendElementWithPatterns(item,chart,onHoverIndex,disableAccessibility,patternsColors,patternsList,enableHoverFeature){const isDoughnut="doughnut"===chart.config.type,index=isDoughnut?item.index:item.datasetIndex,img=new Image,boxSpan=this.createHtmlLegendLine(item,chart.config.type),pattern=patternsList[index](!1,patternsColors[index],disableAccessibility),patternCanvas=this.patternService.getPatternCanvas(pattern);return img.src=patternCanvas.toDataURL(),boxSpan.style.background=`url(${img.src})`,boxSpan.style.backgroundSize="cover",boxSpan.style.borderColor=patternsColors[index],boxSpan.style.borderWidth="2px",enableHoverFeature&&(boxSpan.onmouseover=()=>{isDoughnut?onHoverIndex.next(index):onHoverIndex.next({...onHoverIndex.value,dataSetIndex:index})},boxSpan.onmouseleave=()=>{onHoverIndex.next(null)}),boxSpan}createHtmlLegendLine(item,type){const boxSpan=document.createElement("div");return"doughnut"!==type&&(boxSpan.style.background="rgba(0, 0, 0, 0.1)",boxSpan.style.borderColor=item.strokeStyle,boxSpan.style.borderWidth="2px"),boxSpan.style.borderRadius="5px",boxSpan.style.borderStyle="solid",boxSpan.style.display="flex",boxSpan.style.justifyContent="center",boxSpan.style.alignItems="center",boxSpan.style.minWidth="22px",boxSpan.style.marginRight="6px",boxSpan.style.minHeight="22px",boxSpan}createLegendElementWithCheckbox(chart,item,selectMode,onHoverIndex,patternsColors,enableHoverFeature){const isDoughnut="doughnut"===chart.config.type,index=isDoughnut?item.index:item.datasetIndex,checkbox=this.createLegendCheckbox(chart,item,patternsColors),allCheckBoxesVisible=chart.config.data.labels.every(((_,index)=>chart.getDataVisibility(index)));return allCheckBoxesVisible?(isDoughnut&&(selectMode.next(!1),onHoverIndex.next(-1)),checkbox):(enableHoverFeature&&(checkbox.onmouseover=()=>{isDoughnut?onHoverIndex.next(index):onHoverIndex.next({...onHoverIndex.value,dataSetIndex:index}),chart.update()},checkbox.onmouseleave=()=>{isDoughnut?onHoverIndex.next(null):onHoverIndex.next({...onHoverIndex.value,dataSetIndex:-1}),chart.update()}),checkbox)}createLegendCheckbox(chart,item,patternsColors){const index="doughnut"===chart.config.type?item.index:item.datasetIndex,checkbox=document.createElement("input");checkbox.setAttribute("type","checkbox"),checkbox.setAttribute("data-test-id",`legend-checkbox-${index}`);const isDataSetVisible=this.isChartDataVisible(chart,index),patternColor=patternsColors?patternsColors[index]:void 0;return this.addCheckboxStyle(isDataSetVisible,item,checkbox,patternColor),checkbox}addCheckboxStyle(isDataSetVisible,item,checkbox,patternColor){let backgroundColor="#fff",borderColor="#666";isDataSetVisible&&(backgroundColor=this.isDefaultWhiteColor(item.strokeStyle)?patternColor:item.strokeStyle,borderColor=this.isDefaultWhiteColor(item.strokeStyle)?patternColor:item.strokeStyle,checkbox.setAttribute("checked",""+isDataSetVisible)),checkbox.setAttribute("class","mc-checkbox__input"),checkbox.setAttribute("style",`background-color: ${backgroundColor};\n      min-width: 22px;\n      min-height: 22px;\n      margin-right: 6px;\n      border-color: ${borderColor};`)}createHtmlLegendItemText(item){const textContainer=document.createElement("p");textContainer.style.color=item.fontColor,textContainer.style.fontSize="14px",textContainer.style.margin="0",textContainer.style.padding="0";const text=document.createTextNode(item.text);return textContainer.appendChild(text),textContainer}createTooltipAndItsIcon(doughnutData,maxValueToDisplay){const iconTopWrapper=document.createElement("div"),iconWrapper=document.createElement("div"),icon=document.createElement("img");iconTopWrapper.style.position="absolute",iconTopWrapper.style.right="-32px",icon.src="src/assets/icons/Navigation_Notification_Question_24px.svg",icon.style.top="0",icon.style.width="1.5rem",icon.style.filter="invert(38%) sepia(19%) saturate(18%) hue-rotate(337deg) brightness(97%) contrast(85%)",iconWrapper.style.position="relative",iconWrapper.style.display="flex";const tooltip=this.createLegendOthersTooltip(doughnutData,maxValueToDisplay);return icon.onmouseover=()=>{iconWrapper.firstElementChild.style.visibility="visible"},icon.onmouseleave=()=>{iconWrapper.firstElementChild.style.visibility="hidden"},iconTopWrapper.appendChild(iconWrapper),iconWrapper.appendChild(tooltip),iconWrapper.appendChild(icon),iconTopWrapper}createLegendElementWithSquareArea(item,mainSerieFirstDataset){const liContent=this.createHtmlLegendLine(item,""),divPoint=this.createHtmlLegendDatasetSquare(item),index=item.index||item.datasetIndex;return divPoint.style.width="10px",divPoint.style.height="10px",index%2==0?mainSerieFirstDataset?divPoint.style.borderRadius="25px":divPoint.style.transform="rotate(45deg)":mainSerieFirstDataset?divPoint.style.transform="rotate(45deg)":divPoint.style.borderRadius="25px",liContent.appendChild(divPoint),liContent}createHtmlLegendDatasetSquare(item){const divPoint=document.createElement("div");return divPoint.style.height="6px",divPoint.style.width="6px",divPoint.style.background="white",divPoint.style.borderStyle="solid",divPoint.style.borderColor=item.strokeStyle,divPoint.style.borderWidth="2px",divPoint}createLegendOthersTooltip(doughnutData,maxValueToDisplay){const tooltip=document.createElement("div");return tooltip.style.visibility="hidden",tooltip.style.position="absolute",tooltip.style.zIndex="10",tooltip.style.width="350px",tooltip.style.bottom="100%",tooltip.style.left="50%",tooltip.style.marginLeft="-150px",tooltip.style.background="#FFFFFF",tooltip.style.boxShadow="0px 1px 5px rgba(0, 0, 0, 0.2)",tooltip.style.borderRadius="0.5rem",tooltip.style.fontSize="14px",tooltip.style.overflow="hidden",this.addOthersTooltipLines(doughnutData,maxValueToDisplay,tooltip),tooltip}addOthersTooltipLines(doughnutData,maxValueToDisplay,tooltip){const startIndex=maxValueToDisplay-1;doughnutData.data.slice(startIndex).forEach(((_ignore,index)=>{const dataIndex=startIndex+index,textWrapper=document.createElement("div");textWrapper.style.display="flex",textWrapper.style.justifyContent="space-between",textWrapper.style.padding="0.5rem",textWrapper.style.border="1px solid #CCCCCC";const label=document.createElement("span");label.appendChild(document.createTextNode(doughnutData.labels[dataIndex]));const value=document.createElement("span");value.appendChild(document.createTextNode(this.formatUtilitiesService.formatValueAndRate(doughnutData,dataIndex))),textWrapper.appendChild(label),textWrapper.appendChild(value),tooltip.appendChild(textWrapper)}))}getChartsData(chart){let dataSets=chart.config.data.datasets;return this.isMonoDataSetChart(chart)&&(dataSets=chart.config.data.datasets[0].data),dataSets}isMonoDataSetChart(chart){const{type}=chart.config;return"pie"===type||"doughnut"===type}allDataVisible(chart){let allVisible=!0;return this.getChartsData(chart).forEach(((_data,dataIndex)=>{allVisible=allVisible&&this.isChartDataVisible(chart,dataIndex)})),allVisible}isChartDataVisible(chart,dataIndex){return this.isMonoDataSetChart(chart)?chart.getDataVisibility(dataIndex):chart.isDatasetVisible(dataIndex)}isDefaultWhiteColor(color){return"#00000000"===color}static ctorParameters=()=>[{type:_pattern_service__WEBPACK_IMPORTED_MODULE_0__.s},{type:_format_utilities_service__WEBPACK_IMPORTED_MODULE_1__.D}]};ChartCommonLegendService=(0,tslib__WEBPACK_IMPORTED_MODULE_2__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Injectable)({providedIn:"root"})],ChartCommonLegendService)},"./src/services/color-function.service.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{S:()=>ColorFunctionsService});var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let ColorFunctionsService=class ColorFunctionsService{constructor(){}addAlpha(color,opacity){return color+Math.round(255*Math.min(Math.max(opacity||1,0),1)).toString(16).toUpperCase()}static ctorParameters=()=>[]};ColorFunctionsService=(0,tslib__WEBPACK_IMPORTED_MODULE_0__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable)({providedIn:"root"})],ColorFunctionsService)},"./src/types/tooltip-chart-type.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";var TooltipChartType;__webpack_require__.d(__webpack_exports__,{Y:()=>TooltipChartType}),function(TooltipChartType){TooltipChartType.RADAR="RADAR",TooltipChartType.BAR_CHART="BAR_CHART",TooltipChartType.MIXED_BAR_LINE_CHART="MIXED_BAR_LINE_CHART",TooltipChartType.DETAILS_BAR_CHART="DETAILS_BAR_CHART",TooltipChartType.LINE_CHART="LINE_CHART",TooltipChartType.DOUGHNUT="DOUGHNUT"}(TooltipChartType||(TooltipChartType={}))},"./src/components/doughnut/doughnut-chart.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,MultipleData:()=>MultipleData,__namedExportsOrder:()=>__namedExportsOrder,default:()=>doughnut_chart_stories});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var doughnut_chart_componentngResource=__webpack_require__("./src/components/doughnut/doughnut-chart.component.scss?ngResource"),doughnut_chart_componentngResource_default=__webpack_require__.n(doughnut_chart_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),ng2_charts=__webpack_require__("./node_modules/ng2-charts/fesm2022/ng2-charts.mjs"),chart=__webpack_require__("./node_modules/chart.js/dist/chart.js"),chart_design=__webpack_require__("./src/patterns/chart-design.ts"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),generic_tooltip_service=__webpack_require__("./src/services/generic-tooltip.service.ts"),tooltip_chart_type=__webpack_require__("./src/types/tooltip-chart-type.ts"),format_utilities_service=__webpack_require__("./src/services/format-utilities.service.ts"),BehaviorSubject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/BehaviorSubject.js"),mozaic_ds_angular=__webpack_require__("./node_modules/@mozaic-ds/angular/adeo/fesm2020/mozaic-ds-angular.mjs"),color_function_service=__webpack_require__("./src/services/color-function.service.ts"),chart_common_legend_service=__webpack_require__("./src/services/chart-common-legend.service.ts");let DoughnutChartFunctionsService=class DoughnutChartFunctionsService{formatUtilitiesService;colorFunctionsService;chartCommonLegendService;doughnutRef=new BehaviorSubject.t(null);onHoverIndex=new BehaviorSubject.t(null);backgroundColor=new BehaviorSubject.t(null);centeredLabel=new BehaviorSubject.t(null);constructor(formatUtilitiesService,colorFunctionsService,chartCommonLegendService){this.formatUtilitiesService=formatUtilitiesService,this.colorFunctionsService=colorFunctionsService,this.chartCommonLegendService=chartCommonLegendService}privateGetHtmlLegendPlugin(legendContainer,selectMode,disableAccessibility,patternsColors,patternsList,maxValueToDisplay,doughnutData,enableHoverFeature){return this.chartCommonLegendService.getHtmlLegendPlugin(legendContainer,selectMode,this.onHoverIndex,disableAccessibility,patternsColors,patternsList,enableHoverFeature,maxValueToDisplay,doughnutData)}getBackgroundColor(patternsColors,patternsList,disableAccessibility,enableHoverFeature){return null!==this.onHoverIndex.value&&enableHoverFeature?patternsList.map(((pattern,index)=>this.onHoverIndex.value===index?pattern(!1,patternsColors[index],disableAccessibility):pattern(!0,patternsColors[index],disableAccessibility))):patternsList.map(((pattern,index)=>pattern(!1,patternsColors[index],disableAccessibility)))}getBorderColor(patternsColors,enableHoverFeature){return null!==this.onHoverIndex.value&&enableHoverFeature?patternsColors.map(((color,index)=>this.onHoverIndex.value===index?color:this.colorFunctionsService.addAlpha(color,.2))):patternsColors}getOnHoverOptions(){return(_ignore,activeElements)=>{void 0!==activeElements[0]?this.onHoverIndex.next(activeElements[0].index):this.onHoverIndex.next(null)}}getFormattedText(str){return str.charAt(0).toUpperCase()+str.slice(1).toLowerCase()}getCenteredLabelPlugin(doughnutData){return{id:"centeredLabelPlugin",afterDatasetDraw:chart=>{const selectedIndexes=[];chart.getDatasetMeta(0).data.forEach(((arcElement,index)=>{arcElement.startAngle!==arcElement.endAngle&&selectedIndexes.push(index)}));const total=chart._metasets[0]?._dataset?.raw_value?.filter(((_,index)=>selectedIndexes.includes(index))).reduce(((acc,currentValue)=>acc+currentValue),0),unit=doughnutData[0].unit??"";this.centeredLabel.next(`${this.formatUtilitiesService.formatWithThousandsSeparators(total)}${unit}`)}}}getDoughnutLabels(labels,data,maxValues,othersLabel){let truncatedLabels=labels.slice(0),truncatedData=data.slice(0);return labels.length>maxValues&&(truncatedData=this.groupDataAfterNthValue(data,maxValues),truncatedLabels=truncatedLabels.slice(0,maxValues-1),truncatedLabels.push(othersLabel)),truncatedLabels.map(((label,index)=>{const rate=truncatedData[index].rate;return void 0!==rate?`${this.getFormattedText(label)} (${this.formatUtilitiesService.formatWithThousandsSeparators(rate)}%)`:this.getFormattedText(label)}))}groupDataAfterNthValue(data,maxValues){if(maxValues<1)return data;let truncatedData=data.slice(0);return data.length>maxValues&&(truncatedData=truncatedData.slice(0,maxValues),truncatedData[maxValues-1]=data.slice(maxValues).reduce(((result,current)=>(result.rate&&current.rate&&(result.rate+=current.rate),result.value+=current.value,result)),{...data[maxValues-1]})),truncatedData}static ctorParameters=()=>[{type:format_utilities_service.D},{type:color_function_service.S},{type:chart_common_legend_service.qR}]};DoughnutChartFunctionsService=(0,tslib_es6.Cg)([(0,core.Injectable)({providedIn:"root"})],DoughnutChartFunctionsService),chart.t1.register(chart.hE,chart.m_,chart.s$,chart.Bs);let DoughnutChartComponent=class DoughnutChartComponent{doughnutChartFunctionsService;genericTooltipService;formatUtilitiesService;legendContainerElementRef;chartId="doughnut-chart";data=[];labels=[];cssClasses=void 0;enableCenteredLabel=!0;disableAccessibility=!1;enableHoverFeature=!1;colourSet=0;newPatternsOrder=[0,1,2,3,4,5];width="400px";height="400px";maxValues=5;styles={};plugins=[];othersLabel="others";chart;doughnutChartPlugins=[];doughnutChartData={labels:[],datasets:[{data:[]}]};doughnutChartOptions={responsive:!0,plugins:{legend:{display:!1,position:"bottom",align:"start",labels:{pointStyle:"rectRounded",usePointStyle:!0}},title:{display:!1}},spacing:0,cutout:"70%",layout:{padding:{top:50,right:50,bottom:50,left:50}}};selectMode=new BehaviorSubject.t(!1);legendContainer=new BehaviorSubject.t(null);colourSets=(0,chart_design.A)().colourSets;patternsStandardList=(0,chart_design.A)().patternsStandardList;constructor(doughnutChartFunctionsService,genericTooltipService,formatUtilitiesService){this.doughnutChartFunctionsService=doughnutChartFunctionsService,this.genericTooltipService=genericTooltipService,this.formatUtilitiesService=formatUtilitiesService}ngAfterViewInit(){this.legendContainer.next(this.legendContainerElementRef?.nativeElement);const doughnutDataAndLabels={data:this.data,labels:this.labels};this.doughnutChartOptions.onHover=(event,elements,chart)=>{chart&&(this.enableHover()&&this.doughnutChartFunctionsService.getOnHoverOptions(),chart.canvas.style.cursor=0!==elements.length?"pointer":"default")},this.doughnutChartPlugins.push(this.doughnutChartFunctionsService.privateGetHtmlLegendPlugin(this.legendContainer,this.selectMode,this.disablePattern(),this.patternsColors(),this.patternsOrderedList(),this.maxValues,doughnutDataAndLabels,this.enableHover()),this.doughnutChartFunctionsService.getCenteredLabelPlugin(this.data)),this.doughnutChartData={labels:this.doughnutChartFunctionsService.getDoughnutLabels(this.labels,this.data,this.maxValues,this.othersLabel),datasets:[{data:this.groupedData().map((x=>x.value)),backgroundColor:this.doughnutChartFunctionsService.getBackgroundColor(this.patternsColors(),this.patternsOrderedList(),this.disableAccessibility,this.enableHoverFeature),borderColor:this.doughnutChartFunctionsService.getBorderColor(this.patternsColors(),this.enableHoverFeature)}]},this.doughnutChartData.datasets[0].raw_value=this.groupedData().map((x=>x.value)),this.doughnutChartOptions.spacing=2*this.data.length;let animationFrameId=null;this.doughnutChartFunctionsService.onHoverIndex.subscribe((index=>{null!==animationFrameId&&cancelAnimationFrame(animationFrameId),animationFrameId=requestAnimationFrame((()=>{this.doughnutChartData.datasets[0].backgroundColor=this.doughnutChartFunctionsService.getBackgroundColor(this.patternsColors(),this.patternsOrderedList(),this.disableAccessibility,this.enableHoverFeature),this.chart?.update()}))})),this.doughnutChartOptions.plugins={...this.doughnutChartOptions.plugins,tooltip:{enabled:!1,external:context=>{this.genericTooltipService.createTooltip(context,this.getTooltipData.bind(this),{chartType:tooltip_chart_type.Y.DOUGHNUT},this.patternsColors(),this.patternsOrderedList(),this.disablePattern())}}}}disablePattern(){return this.disableAccessibility}enableHover(){return this.enableHoverFeature}groupedData(){return this.doughnutChartFunctionsService.groupDataAfterNthValue(this.data,this.maxValues)}patternsColors(){return 6!==this.newPatternsOrder.length?this.colourSets[this.colourSet]:this.newPatternsOrder.map((id=>this.colourSets[this.colourSet][id]))}patternsOrderedList(){return 6!==this.newPatternsOrder.length?this.patternsStandardList:this.newPatternsOrder.map((id=>this.patternsStandardList[id]))}getTooltipData(context){const dataIndex=context.tooltip.dataPoints[0].dataIndex,tooltipData=this.groupedData()[dataIndex];let rate;tooltipData.rate&&(rate=this.formatUtilitiesService.formatWithThousandsSeparators(tooltipData.rate));const value=this.formatUtilitiesService.formatWithThousandsSeparators(tooltipData.value),unit=tooltipData.unit??"";return rate?`${value}${unit} (${rate})%`:`${value}${unit}`}static ctorParameters=()=>[{type:DoughnutChartFunctionsService},{type:generic_tooltip_service.w},{type:format_utilities_service.D}];static propDecorators={legendContainerElementRef:[{type:core.ViewChild,args:["legendContainer",{read:core.ElementRef}]}],chartId:[{type:core.Input}],data:[{type:core.Input}],labels:[{type:core.Input}],cssClasses:[{type:core.Input}],enableCenteredLabel:[{type:core.Input}],disableAccessibility:[{type:core.Input}],enableHoverFeature:[{type:core.Input}],colourSet:[{type:core.Input}],newPatternsOrder:[{type:core.Input}],width:[{type:core.Input}],height:[{type:core.Input}],maxValues:[{type:core.Input}],styles:[{type:core.Input}],plugins:[{type:core.Input}],othersLabel:[{type:core.Input}],chart:[{type:core.ViewChild,args:[ng2_charts.j9]}]}};DoughnutChartComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"moz-ng-doughnut-chart",standalone:!0,imports:[ng2_charts.FR,common.CommonModule,mozaic_ds_angular.q4],template:'<div class="container">\r\n  <div class="main" [ngStyle]="{ width: width, height: height }">\r\n    <canvas\r\n      baseChart\r\n      [id]="chartId"\r\n      [data]="doughnutChartData"\r\n      [options]="doughnutChartOptions"\r\n      [plugins]="doughnutChartPlugins"\r\n      [type]="\'doughnut\'"\r\n    >\r\n    </canvas>\r\n    <span *ngIf="enableCenteredLabel" class="centered-label">\r\n      {{ doughnutChartFunctionsService.centeredLabel | async }}\r\n    </span>\r\n  </div>\r\n  <moz-checkbox style="display: none"></moz-checkbox>\r\n  <div #legendContainer></div>\r\n</div>\r\n',styles:[doughnut_chart_componentngResource_default()]})],DoughnutChartComponent);const doughnut_chart_stories={title:"Charts/Doughnut",component:DoughnutChartComponent,tags:["autodocs"]},Default={args:{height:"400px",width:"400px",labels:["Data One","Data Two"],enableCenteredLabel:!0,disableAccessibility:!1,data:[{value:2771824.19,unit:"€",rate:30.186240355262925},{value:1715453.65,unit:"€",rate:18.68195550931139}],maxValues:2,colourSet:5}},MultipleData={args:{height:"400px",width:"400px",labels:["Data One","Data Two","Data Three","Data Four","Data Five","Data Six"],maxValues:3,disableAccessibility:!1,data:[{value:2771824.19,unit:"€",rate:30.186240355262925},{value:1715453.65,unit:"€",rate:18.68195550931139},{value:1651575.28,unit:"€",rate:17.986295287685856},{value:1168958.3,unit:"€",rate:12.730409214402426},{value:949837.87,unit:"€",rate:10.34410275579238},{value:924760.17,unit:"€",rate:10.070996877545035}],colourSet:0}},__namedExportsOrder=["Default","MultipleData"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    height: "400px",\n    width: "400px",\n    labels: ["Data One", "Data Two"],\n    enableCenteredLabel: true,\n    disableAccessibility: false,\n    data: [{\n      value: 2771824.19,\n      unit: "€",\n      rate: 30.186240355262925\n    }, {\n      value: 1715453.65,\n      unit: "€",\n      rate: 18.68195550931139\n    }],\n    maxValues: 2,\n    colourSet: 5\n  }\n} satisfies Story',...Default.parameters?.docs?.source}}},MultipleData.parameters={...MultipleData.parameters,docs:{...MultipleData.parameters?.docs,source:{originalSource:'{\n  args: {\n    height: "400px",\n    width: "400px",\n    labels: ["Data One", "Data Two", "Data Three", "Data Four", "Data Five", "Data Six"],\n    maxValues: 3,\n    disableAccessibility: false,\n    data: [{\n      value: 2771824.19,\n      unit: "€",\n      rate: 30.186240355262925\n    }, {\n      value: 1715453.65,\n      unit: "€",\n      rate: 18.68195550931139\n    }, {\n      value: 1651575.28,\n      unit: "€",\n      rate: 17.986295287685856\n    }, {\n      value: 1168958.3,\n      unit: "€",\n      rate: 12.730409214402426\n    }, {\n      value: 949837.87,\n      unit: "€",\n      rate: 10.34410275579238\n    }, {\n      value: 924760.17,\n      unit: "€",\n      rate: 10.070996877545035\n    }],\n    colourSet: 0\n  }\n} satisfies Story',...MultipleData.parameters?.docs?.source}}}},"./src/components/doughnut/doughnut-chart.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"/* stylelint-disable max-line-length */\n/* create columns */\n/* create columns */\n/* create custom named columns with custom content */\n/* mqp:start */\n/* stylelint-disable no-descending-specificity */\n.mc-checkbox {\n  align-items: center;\n  display: flex;\n}\n.mc-checkbox__label {\n  font-size: 1rem;\n  line-height: 1.125;\n  cursor: pointer;\n  margin-left: 0.5rem;\n  color: #000000;\n}\n.mc-checkbox__input {\n  font-family: \"LeroyMerlin\", sans-serif;\n  font-weight: 400;\n  box-sizing: border-box;\n  outline: none;\n  appearance: none;\n  padding: 0;\n  margin: 0;\n  box-shadow: none;\n  border: none;\n  /* for mozilla */\n  /* stylelint-disable-next-line */\n  min-width: 20px;\n  min-height: 20px;\n  width: 1.25rem;\n  height: 1.25rem;\n  border-radius: 4px;\n  border: 2px solid #666666;\n  background-color: #ffffff;\n  position: relative;\n  transition: all 200ms ease;\n  cursor: pointer;\n}\n.mc-checkbox__input[type=number]::-webkit-inner-spin-button, .mc-checkbox__input[type=number]::-webkit-outer-spin-button {\n  appearance: none;\n  margin: 0;\n}\n.mc-checkbox__input[type=number] {\n  -moz-appearance: textfield;\n}\n.mc-checkbox__input[type=search]::-webkit-search-decoration:hover, .mc-checkbox__input[type=search]::-webkit-search-cancel-button:hover {\n  cursor: pointer;\n}\n.mc-checkbox__input::-ms-check {\n  background-color: #ffffff;\n  border: 2px solid #666666;\n  border-radius: 4px;\n  color: #ffffff;\n}\n.mc-checkbox__input:hover {\n  border-color: #191919;\n}\n.mc-checkbox__input:hover::-ms-check {\n  border-color: #191919;\n}\n.mc-checkbox__input:focus {\n  box-shadow: 0 0 0 0.125rem #ffffff, 0 0 0 0.25rem #0b96cc;\n}\n.mc-checkbox__input:focus::-ms-check {\n  box-shadow: 0 0 0 0.125rem #ffffff, 0 0 0 0.25rem #0b96cc;\n}\n.mc-checkbox__input:checked, .mc-checkbox__input:indeterminate {\n  background-color: #46a610;\n  border-color: #46a610;\n  background-size: 1rem 1rem;\n}\n.mc-checkbox__input:checked {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' height='1rem' width='1rem' fill='%23ffffff' viewBox='0 0 16 16'%3E%3Cpath d='M7.63 11.21a1 1 0 0 1-1.38 0l-2.92-2.6a1 1 0 1 1 1.34-1.48l2.22 2 4.41-4.34a1 1 0 1 1 1.4 1.42z'/%3E%3C/svg%3E\");\n  background-position: center center;\n}\n.mc-checkbox__input:checked::-ms-check {\n  background-color: #46a610;\n  border-color: #46a610;\n}\n.mc-checkbox__input:checked:hover:not(:disabled) {\n  border-color: #035010;\n}\n.mc-checkbox__input:checked:hover:not(:disabled)::-ms-check {\n  border-color: #035010;\n}\n.mc-checkbox__input:indeterminate {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' height='1rem' width='1rem' fill='%23ffffff' viewBox='0 0 16 16'%3E%3Cpath d='M12 9H4a1 1 0 010-2h8a1 1 0 010 2z'/%3E%3C/svg%3E\");\n}\n.mc-checkbox__input:disabled {\n  background-color: #e6e6e6;\n  border-color: #e6e6e6;\n  cursor: not-allowed;\n}\n.mc-checkbox__input:disabled::-ms-check {\n  background-color: #e6e6e6;\n  border-color: #e6e6e6;\n}\n.mc-checkbox__input:disabled:checked {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' height='1rem' width='1rem' fill='%23999999' viewBox='0 0 16 16'%3E%3Cpath d='M7.63 11.21a1 1 0 0 1-1.38 0l-2.92-2.6a1 1 0 1 1 1.34-1.48l2.22 2 4.41-4.34a1 1 0 1 1 1.4 1.42z'/%3E%3C/svg%3E\");\n}\n.mc-checkbox__input:disabled:indeterminate {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' height='1rem' width='1rem' fill='%23999999' viewBox='0 0 16 16'%3E%3Cpath d='M12 9H4a1 1 0 010-2h8a1 1 0 010 2z'/%3E%3C/svg%3E\");\n}\n.mc-checkbox__input:disabled + .mc-checkbox__label {\n  color: #808080;\n}\n.mc-checkbox__input.is-invalid {\n  border-color: #c61112;\n}\n.mc-checkbox__input.is-invalid::-ms-check {\n  border-color: #c61112;\n}\n.mc-checkbox__input.is-invalid:hover {\n  border-color: #530000;\n}\n.mc-checkbox__input.is-invalid:hover::-ms-check {\n  border-color: #530000;\n}\n\n/* stylelint-enable */\n/* mqp:end */\n.container {\n  font-weight: 400;\n  font-family: \"Roboto\", sans-serif;\n}\n\n.main {\n  display: grid;\n  place-items: center;\n}\n.main canvas {\n  grid-area: 1/1;\n}\n.main .centered-label {\n  grid-area: 1/1;\n  place-self: center;\n  text-align: center;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);