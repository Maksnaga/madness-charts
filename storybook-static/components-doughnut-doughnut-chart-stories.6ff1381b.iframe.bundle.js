(self.webpackChunk_mozaic_ds_angular_chart=self.webpackChunk_mozaic_ds_angular_chart||[]).push([[910],{"./src/components/doughnut/doughnut-chart.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,MultipleData:()=>MultipleData,__namedExportsOrder:()=>__namedExportsOrder,default:()=>doughnut_chart_stories});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var doughnut_chart_componentngResource=__webpack_require__("./src/components/doughnut/doughnut-chart.component.scss?ngResource"),doughnut_chart_componentngResource_default=__webpack_require__.n(doughnut_chart_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),ng2_charts=__webpack_require__("./node_modules/ng2-charts/fesm2022/ng2-charts.mjs"),chart=__webpack_require__("./node_modules/chart.js/dist/chart.js"),chart_design=__webpack_require__("./src/patterns/chart-design.ts"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),generic_tooltip_service=__webpack_require__("./src/services/generic-tooltip.service.ts"),tooltip_chart_type=__webpack_require__("./src/types/tooltip-chart-type.ts"),BehaviorSubject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/BehaviorSubject.js"),format_utilities_service=__webpack_require__("./src/services/format-utilities.service.ts"),color_function_service=__webpack_require__("./src/services/color-function.service.ts"),chart_legend_service=__webpack_require__("./src/services/chart-legend.service.ts");let DoughnutChartFunctionsService=class DoughnutChartFunctionsService{formatUtilitiesService;colorFunctionsService;chartLegendService;doughnutRef=new BehaviorSubject.t(null);onHoverIndex=new BehaviorSubject.t(null);backgroundColor=new BehaviorSubject.t(null);centeredLabel=new BehaviorSubject.t(null);constructor(formatUtilitiesService,colorFunctionsService,chartLegendService){this.formatUtilitiesService=formatUtilitiesService,this.colorFunctionsService=colorFunctionsService,this.chartLegendService=chartLegendService}privateGetHtmlLegendPlugin(legendContainer,selectMode,disableAccessibility,patternsColors,patternsList,maxValueToDisplay,doughnutData,enableHoverFeature){return this.chartLegendService.getHtmlLegendPlugin(legendContainer,selectMode,this.onHoverIndex,disableAccessibility,patternsColors,patternsList,enableHoverFeature,maxValueToDisplay,doughnutData)}getBackgroundColor(patternsColors,patternsList,disableAccessibility,enableHoverFeature){return null!==this.onHoverIndex.value&&enableHoverFeature?patternsList.map(((pattern,index)=>this.onHoverIndex.value===index?pattern(!1,patternsColors[index],disableAccessibility):pattern(!0,patternsColors[index],disableAccessibility))):patternsList.map(((pattern,index)=>pattern(!1,patternsColors[index],disableAccessibility)))}getBorderColor(patternsColors,enableHoverFeature){return null!==this.onHoverIndex.value&&enableHoverFeature?patternsColors.map(((color,index)=>this.onHoverIndex.value===index?color:this.colorFunctionsService.addAlpha(color,.2))):patternsColors}getOnHoverOptions(){return(_ignore,activeElements)=>{void 0!==activeElements[0]?this.onHoverIndex.next(activeElements[0].index):this.onHoverIndex.next(null)}}getFormattedText(str){return str.charAt(0).toUpperCase()+str.slice(1).toLowerCase()}getCenteredLabelPlugin(doughnutData){return{id:"centeredLabelPlugin",afterDatasetDraw:chart=>{const selectedIndexes=[];chart.getDatasetMeta(0).data.forEach(((arcElement,index)=>{arcElement.startAngle!==arcElement.endAngle&&selectedIndexes.push(index)}));const total=chart._metasets[0]?._dataset?.raw_value?.filter(((_,index)=>selectedIndexes.includes(index))).reduce(((acc,currentValue)=>acc+currentValue),0),unit=doughnutData[0].unit??"";this.centeredLabel.next(`${this.formatUtilitiesService.formatWithThousandsSeparators(total)}${unit}`)}}}getDoughnutLabels(labels,data,maxValues,othersLabel){let truncatedLabels=labels.slice(0),truncatedData=data.slice(0);return labels.length>maxValues&&(truncatedData=this.groupDataAfterNthValue(data,maxValues),truncatedLabels=truncatedLabels.slice(0,maxValues-1),truncatedLabels.push(othersLabel)),truncatedLabels.map(((label,index)=>{const rate=truncatedData[index].rate;return void 0!==rate?`${this.getFormattedText(label)} (${this.formatUtilitiesService.formatWithThousandsSeparators(rate)}%)`:this.getFormattedText(label)}))}groupDataAfterNthValue(data,maxValues){if(maxValues<1)return data;let truncatedData=data.slice(0);return data.length>maxValues&&(truncatedData=truncatedData.slice(0,maxValues),truncatedData[maxValues-1]=data.slice(maxValues).reduce(((result,current)=>(result.rate&&current.rate&&(result.rate+=current.rate),result.value+=current.value,result)),{...data[maxValues-1]})),truncatedData}static ctorParameters=()=>[{type:format_utilities_service.D},{type:color_function_service.S},{type:chart_legend_service.bR}]};DoughnutChartFunctionsService=(0,tslib_es6.Cg)([(0,core.Injectable)({providedIn:"root"})],DoughnutChartFunctionsService);var mozaic_ds_angular=__webpack_require__("./node_modules/@mozaic-ds/angular/adeo/fesm2020/mozaic-ds-angular.mjs");chart.t1.register(chart.hE,chart.m_,chart.s$,chart.Bs);let DoughnutChartComponent=class DoughnutChartComponent{doughnutChartFunctionsService;genericTooltipService;formatUtilitiesService;legendContainerElementRef;chartId="doughnut-chart";data=[];labels=[];cssClasses=void 0;enableCenteredLabel=!0;disableAccessibility=!1;enableHoverFeature=!1;colourSet=0;newPatternsOrder=[0,1,2,3,4,5];width="400px";height="400px";maxValues=5;styles={};plugins=[];othersLabel="others";chart;doughnutChartPlugins=[];doughnutChartData={labels:[],datasets:[{data:[]}]};doughnutChartOptions={responsive:!0,plugins:{legend:{display:!1,position:"bottom",align:"start",labels:{pointStyle:"rectRounded",usePointStyle:!0}},title:{display:!1}},spacing:0,cutout:"70%",layout:{padding:{top:50,right:50,bottom:50,left:50}}};selectMode=new BehaviorSubject.t(!1);legendContainer=new BehaviorSubject.t(null);colourSets=(0,chart_design.A)().colourSets;patternsStandardList=(0,chart_design.A)().patternsStandardList;constructor(doughnutChartFunctionsService,genericTooltipService,formatUtilitiesService){this.doughnutChartFunctionsService=doughnutChartFunctionsService,this.genericTooltipService=genericTooltipService,this.formatUtilitiesService=formatUtilitiesService}ngAfterViewInit(){this.legendContainer.next(this.legendContainerElementRef?.nativeElement);const doughnutDataAndLabels={data:this.data,labels:this.labels};this.doughnutChartOptions.onHover=(event,elements,chart)=>{chart&&(this.enableHover()&&this.doughnutChartFunctionsService.getOnHoverOptions(),chart.canvas.style.cursor=0!==elements.length?"pointer":"default")},this.doughnutChartPlugins.push(this.doughnutChartFunctionsService.privateGetHtmlLegendPlugin(this.legendContainer,this.selectMode,this.disablePattern(),this.patternsColors(),this.patternsOrderedList(),this.maxValues,doughnutDataAndLabels,this.enableHover()),this.doughnutChartFunctionsService.getCenteredLabelPlugin(this.data)),this.doughnutChartData={labels:this.doughnutChartFunctionsService.getDoughnutLabels(this.labels,this.data,this.maxValues,this.othersLabel),datasets:[{data:this.groupedData().map((x=>x.value)),backgroundColor:this.doughnutChartFunctionsService.getBackgroundColor(this.patternsColors(),this.patternsOrderedList(),this.disableAccessibility,this.enableHoverFeature),borderColor:this.doughnutChartFunctionsService.getBorderColor(this.patternsColors(),this.enableHoverFeature)}]},this.doughnutChartData.datasets[0].raw_value=this.groupedData().map((x=>x.value)),this.doughnutChartOptions.spacing=2*this.data.length;let animationFrameId=null;this.doughnutChartFunctionsService.onHoverIndex.subscribe((index=>{null!==animationFrameId&&cancelAnimationFrame(animationFrameId),animationFrameId=requestAnimationFrame((()=>{this.doughnutChartData.datasets[0].backgroundColor=this.doughnutChartFunctionsService.getBackgroundColor(this.patternsColors(),this.patternsOrderedList(),this.disableAccessibility,this.enableHoverFeature),this.chart?.update()}))})),this.doughnutChartOptions.plugins={...this.doughnutChartOptions.plugins,tooltip:{enabled:!1,external:context=>{this.genericTooltipService.createTooltip(context,this.getTooltipData.bind(this),{chartType:tooltip_chart_type.Y.DOUGHNUT},this.patternsColors(),this.patternsOrderedList(),this.disablePattern())}}}}disablePattern(){return this.disableAccessibility}enableHover(){return this.enableHoverFeature}groupedData(){return this.doughnutChartFunctionsService.groupDataAfterNthValue(this.data,this.maxValues)}patternsColors(){return 6!==this.newPatternsOrder.length?this.colourSets[this.colourSet]:this.newPatternsOrder.map((id=>this.colourSets[this.colourSet][id]))}patternsOrderedList(){return 6!==this.newPatternsOrder.length?this.patternsStandardList:this.newPatternsOrder.map((id=>this.patternsStandardList[id]))}getTooltipData(context){const dataIndex=context.tooltip.dataPoints[0].dataIndex,tooltipData=this.groupedData()[dataIndex];let rate;tooltipData.rate&&(rate=this.formatUtilitiesService.formatWithThousandsSeparators(tooltipData.rate));const value=this.formatUtilitiesService.formatWithThousandsSeparators(tooltipData.value),unit=tooltipData.unit??"";return rate?`${value}${unit} (${rate})%`:`${value}${unit}`}static ctorParameters=()=>[{type:DoughnutChartFunctionsService},{type:generic_tooltip_service.w},{type:format_utilities_service.D}];static propDecorators={legendContainerElementRef:[{type:core.ViewChild,args:["legendContainer",{read:core.ElementRef}]}],chartId:[{type:core.Input}],data:[{type:core.Input}],labels:[{type:core.Input}],cssClasses:[{type:core.Input}],enableCenteredLabel:[{type:core.Input}],disableAccessibility:[{type:core.Input}],enableHoverFeature:[{type:core.Input}],colourSet:[{type:core.Input}],newPatternsOrder:[{type:core.Input}],width:[{type:core.Input}],height:[{type:core.Input}],maxValues:[{type:core.Input}],styles:[{type:core.Input}],plugins:[{type:core.Input}],othersLabel:[{type:core.Input}],chart:[{type:core.ViewChild,args:[ng2_charts.j9]}]}};DoughnutChartComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"moz-ng-doughnut",standalone:!0,imports:[ng2_charts.FR,common.CommonModule,mozaic_ds_angular.q4],template:'<div class="container">\r\n  <div class="main" [ngStyle]="{ width: width, height: height }">\r\n    <canvas\r\n      baseChart\r\n      [data]="doughnutChartData"\r\n      [options]="doughnutChartOptions"\r\n      [plugins]="doughnutChartPlugins"\r\n      [type]="\'doughnut\'"\r\n    >\r\n    </canvas>\r\n    <span *ngIf="enableCenteredLabel" class="centered-label">\r\n      {{ doughnutChartFunctionsService.centeredLabel | async }}\r\n    </span>\r\n  </div>\r\n  <moz-checkbox style="display: none"></moz-checkbox>\r\n  <div #legendContainer></div>\r\n</div>\r\n',styles:[doughnut_chart_componentngResource_default()]})],DoughnutChartComponent);const doughnut_chart_stories={title:"Charts/Doughnut",component:DoughnutChartComponent,tags:["autodocs"]},Default={args:{height:"400px",width:"400px",labels:["Data One","Data Two"],enableCenteredLabel:!0,disableAccessibility:!1,data:[{value:2771824.19,unit:"€",rate:30.186240355262925},{value:1715453.65,unit:"€",rate:18.68195550931139}],maxValues:2,colourSet:5}},MultipleData={args:{height:"400px",width:"400px",labels:["Data One","Data Two","Data Three","Data Four","Data Five","Data Six"],maxValues:3,disableAccessibility:!1,data:[{value:2771824.19,unit:"€",rate:30.186240355262925},{value:1715453.65,unit:"€",rate:18.68195550931139},{value:1651575.28,unit:"€",rate:17.986295287685856},{value:1168958.3,unit:"€",rate:12.730409214402426},{value:949837.87,unit:"€",rate:10.34410275579238},{value:924760.17,unit:"€",rate:10.070996877545035}],colourSet:0}},__namedExportsOrder=["Default","MultipleData"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    height: "400px",\n    width: "400px",\n    labels: ["Data One", "Data Two"],\n    enableCenteredLabel: true,\n    disableAccessibility: false,\n    data: [{\n      value: 2771824.19,\n      unit: "€",\n      rate: 30.186240355262925\n    }, {\n      value: 1715453.65,\n      unit: "€",\n      rate: 18.68195550931139\n    }],\n    maxValues: 2,\n    colourSet: 5\n  }\n} satisfies Story',...Default.parameters?.docs?.source}}},MultipleData.parameters={...MultipleData.parameters,docs:{...MultipleData.parameters?.docs,source:{originalSource:'{\n  args: {\n    height: "400px",\n    width: "400px",\n    labels: ["Data One", "Data Two", "Data Three", "Data Four", "Data Five", "Data Six"],\n    maxValues: 3,\n    disableAccessibility: false,\n    data: [{\n      value: 2771824.19,\n      unit: "€",\n      rate: 30.186240355262925\n    }, {\n      value: 1715453.65,\n      unit: "€",\n      rate: 18.68195550931139\n    }, {\n      value: 1651575.28,\n      unit: "€",\n      rate: 17.986295287685856\n    }, {\n      value: 1168958.3,\n      unit: "€",\n      rate: 12.730409214402426\n    }, {\n      value: 949837.87,\n      unit: "€",\n      rate: 10.34410275579238\n    }, {\n      value: 924760.17,\n      unit: "€",\n      rate: 10.070996877545035\n    }],\n    colourSet: 0\n  }\n} satisfies Story',...MultipleData.parameters?.docs?.source}}}},"./src/components/doughnut/doughnut-chart.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,'.container {\n  font-weight: 400;\n  font-family: "Roboto", sans-serif;\n}\n\n.main {\n  display: grid;\n  place-items: center;\n}\n.main canvas {\n  grid-area: 1/1;\n}\n.main .centered-label {\n  grid-area: 1/1;\n  place-self: center;\n  text-align: center;\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);