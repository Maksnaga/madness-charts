(self.webpackChunk_mozaic_ds_angular_chart=self.webpackChunk_mozaic_ds_angular_chart||[]).push([[466],{"./src/services/chart-common-legend.service.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{qR:()=>ChartCommonLegendService});var tslib__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_pattern_service__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/services/pattern.service.ts"),_format_utilities_service__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/services/format-utilities.service.ts");let ChartCommonLegendService=class ChartCommonLegendService{patternService;formatUtilitiesService;constructor(patternService,formatUtilitiesService){this.patternService=patternService,this.formatUtilitiesService=formatUtilitiesService}getHtmlLegendPlugin(legendContainer,selectMode,onHoverIndex,disableAccessibility,patternsColors,patternsList,enableHoverFeature,maxValueToDisplay,chartData){const chartLegendService=this;return{id:"htmlLegend",afterUpdate(chart){const flexDirection="doughnut"===chart.config.type?"column":"row",ul=chartLegendService.getOrCreateLegendList(legendContainer,flexDirection);for(ul.style.margin="1.375rem 1.0625rem";ul.firstChild;)ul.firstChild.remove();chart.options.plugins.legend.labels.generateLabels(chart).forEach((item=>{const isDoughnut="doughnut"===chart.config.type,index=isDoughnut?item.index:item.datasetIndex,li=chartLegendService.createHtmlLegendListElement(chart,selectMode,index);if(isDoughnut){const isOthersElement=index+1===maxValueToDisplay;li.style.marginTop="12px",isOthersElement&&(li.style.position="relative")}else li.style.marginRight="10px";let liContent;li.style.width="max-content",li.style.cursor="pointer",liContent=selectMode.value?chartLegendService.createLegendElementWithCheckbox(chart,item,selectMode,onHoverIndex,patternsColors,enableHoverFeature):chartLegendService.createLegendElementWithPatterns(item,chart,onHoverIndex,disableAccessibility,patternsColors,patternsList,enableHoverFeature),liContent.style.boxSizing="border-box",li.appendChild(liContent),li.appendChild(chartLegendService.createHtmlLegendItemText(item)),isDoughnut&&maxValueToDisplay&&chartLegendService.hasOthersTooltipToDisplay(chartData,maxValueToDisplay,index)&&li.appendChild(chartLegendService.createTooltipAndItsIcon(chartData,maxValueToDisplay)),ul.appendChild(li)}))}}}hasOthersTooltipToDisplay(doughnutData,maxValueToDisplay,index){return doughnutData.data.length>maxValueToDisplay&&index===maxValueToDisplay-1}getOrCreateLegendList(legendContainer,flexDirection){let listContainer=legendContainer?.value?.querySelector("ul");return listContainer||(listContainer=document.createElement("ul"),listContainer.style.display="flex",listContainer.style.flexDirection=flexDirection,listContainer.style.margin="0",listContainer.style.padding="0",legendContainer.value?.appendChild(listContainer)),listContainer}createHtmlLegendListElement(chart,selectMode,elementIndex){const li=document.createElement("li");return li.style.alignItems="center",li.style.cursor=selectMode.value?"":"pointer",li.style.display="flex",li.style.flexDirection="row",li.setAttribute("data-test-id",`legend-item-${elementIndex}`),li.onclick=()=>{selectMode.value?this.switchItemVisibility(chart,elementIndex,selectMode):(this.hideAllButThis(chart,elementIndex,selectMode),chart.update())},li}hideAllButThis(chart,elementIndex,selectMode){if(!selectMode.value){const dataSets=this.getChartsData(chart);selectMode.next(!0),dataSets.forEach(((_data,index)=>{index!==elementIndex&&this.switchItemVisibility(chart,index)}))}}switchItemVisibility(chart,elementIndex,selectMode){this.isMonoDataSetChart(chart)?chart.toggleDataVisibility(elementIndex):chart.setDatasetVisibility(elementIndex,!chart.isDatasetVisible(elementIndex)),selectMode&&this.allDataVisible(chart)&&selectMode.next(!1),chart.update()}createLegendElementWithPatterns(item,chart,onHoverIndex,disableAccessibility,patternsColors,patternsList,enableHoverFeature){const isDoughnut="doughnut"===chart.config.type,index=isDoughnut?item.index:item.datasetIndex,img=new Image,boxSpan=this.createHtmlLegendLine(item,chart.config.type),pattern=patternsList[index](!1,patternsColors[index],disableAccessibility),patternCanvas=this.patternService.getPatternCanvas(pattern);return img.src=patternCanvas.toDataURL(),boxSpan.style.background=`url(${img.src})`,boxSpan.style.backgroundSize="cover",boxSpan.style.borderColor=patternsColors[index],boxSpan.style.borderWidth="2px",enableHoverFeature&&(boxSpan.onmouseover=()=>{isDoughnut?onHoverIndex.next(index):onHoverIndex.next({...onHoverIndex.value,dataSetIndex:index})},boxSpan.onmouseleave=()=>{onHoverIndex.next(null)}),boxSpan}createHtmlLegendLine(item,type){const boxSpan=document.createElement("div");return"doughnut"!==type&&(boxSpan.style.background="rgba(0, 0, 0, 0.1)",boxSpan.style.borderColor=item.strokeStyle,boxSpan.style.borderWidth="2px"),boxSpan.style.borderRadius="5px",boxSpan.style.borderStyle="solid",boxSpan.style.display="flex",boxSpan.style.justifyContent="center",boxSpan.style.alignItems="center",boxSpan.style.minWidth="22px",boxSpan.style.marginRight="6px",boxSpan.style.minHeight="22px",boxSpan}createLegendElementWithCheckbox(chart,item,selectMode,onHoverIndex,patternsColors,enableHoverFeature){const isDoughnut="doughnut"===chart.config.type,index=isDoughnut?item.index:item.datasetIndex,checkbox=this.createLegendCheckbox(chart,item,patternsColors),allCheckBoxesVisible=chart.config.data.labels.every(((_,index)=>chart.getDataVisibility(index)));return allCheckBoxesVisible?(isDoughnut&&(selectMode.next(!1),onHoverIndex.next(-1)),checkbox):(enableHoverFeature&&(checkbox.onmouseover=()=>{isDoughnut?onHoverIndex.next(index):onHoverIndex.next({...onHoverIndex.value,dataSetIndex:index}),chart.update()},checkbox.onmouseleave=()=>{isDoughnut?onHoverIndex.next(null):onHoverIndex.next({...onHoverIndex.value,dataSetIndex:-1}),chart.update()}),checkbox)}createLegendCheckbox(chart,item,patternsColors){const index="doughnut"===chart.config.type?item.index:item.datasetIndex,checkbox=document.createElement("input");checkbox.setAttribute("type","checkbox"),checkbox.setAttribute("data-test-id",`legend-checkbox-${index}`);const isDataSetVisible=this.isChartDataVisible(chart,index),patternColor=patternsColors?patternsColors[index]:void 0;return this.addCheckboxStyle(isDataSetVisible,item,checkbox,patternColor),checkbox}addCheckboxStyle(isDataSetVisible,item,checkbox,patternColor){let backgroundColor="#fff",borderColor="#666";isDataSetVisible&&(backgroundColor=this.isDefaultWhiteColor(item.strokeStyle)?patternColor:item.strokeStyle,borderColor=this.isDefaultWhiteColor(item.strokeStyle)?patternColor:item.strokeStyle,checkbox.setAttribute("checked",""+isDataSetVisible)),checkbox.setAttribute("class","mc-checkbox__input"),checkbox.setAttribute("style",`background-color: ${backgroundColor};\n      min-width: 22px;\n      min-height: 22px;\n      margin-right: 6px;\n      border-color: ${borderColor};`)}createHtmlLegendItemText(item){const textContainer=document.createElement("p");textContainer.style.color=item.fontColor,textContainer.style.fontSize="14px",textContainer.style.margin="0",textContainer.style.padding="0";const text=document.createTextNode(item.text);return textContainer.appendChild(text),textContainer}createTooltipAndItsIcon(doughnutData,maxValueToDisplay){const iconTopWrapper=document.createElement("div"),iconWrapper=document.createElement("div"),icon=document.createElement("img");iconTopWrapper.style.position="absolute",iconTopWrapper.style.right="-32px",icon.src="src/assets/icons/Navigation_Notification_Question_24px.svg",icon.style.top="0",icon.style.width="1.5rem",icon.style.filter="invert(38%) sepia(19%) saturate(18%) hue-rotate(337deg) brightness(97%) contrast(85%)",iconWrapper.style.position="relative",iconWrapper.style.display="flex";const tooltip=this.createLegendOthersTooltip(doughnutData,maxValueToDisplay);return icon.onmouseover=()=>{iconWrapper.firstElementChild.style.visibility="visible"},icon.onmouseleave=()=>{iconWrapper.firstElementChild.style.visibility="hidden"},iconTopWrapper.appendChild(iconWrapper),iconWrapper.appendChild(tooltip),iconWrapper.appendChild(icon),iconTopWrapper}createLegendElementWithSquareArea(item,mainSerieFirstDataset){const liContent=this.createHtmlLegendLine(item,""),divPoint=this.createHtmlLegendDatasetSquare(item),index=item.index||item.datasetIndex;return divPoint.style.width="10px",divPoint.style.height="10px",index%2==0?mainSerieFirstDataset?divPoint.style.borderRadius="25px":divPoint.style.transform="rotate(45deg)":mainSerieFirstDataset?divPoint.style.transform="rotate(45deg)":divPoint.style.borderRadius="25px",liContent.appendChild(divPoint),liContent}createHtmlLegendDatasetSquare(item){const divPoint=document.createElement("div");return divPoint.style.height="6px",divPoint.style.width="6px",divPoint.style.background="white",divPoint.style.borderStyle="solid",divPoint.style.borderColor=item.strokeStyle,divPoint.style.borderWidth="2px",divPoint}createLegendOthersTooltip(doughnutData,maxValueToDisplay){const tooltip=document.createElement("div");return tooltip.style.visibility="hidden",tooltip.style.position="absolute",tooltip.style.zIndex="10",tooltip.style.width="350px",tooltip.style.bottom="100%",tooltip.style.left="50%",tooltip.style.marginLeft="-150px",tooltip.style.background="#FFFFFF",tooltip.style.boxShadow="0px 1px 5px rgba(0, 0, 0, 0.2)",tooltip.style.borderRadius="0.5rem",tooltip.style.fontSize="14px",tooltip.style.overflow="hidden",this.addOthersTooltipLines(doughnutData,maxValueToDisplay,tooltip),tooltip}addOthersTooltipLines(doughnutData,maxValueToDisplay,tooltip){const startIndex=maxValueToDisplay-1;doughnutData.data.slice(startIndex).forEach(((_ignore,index)=>{const dataIndex=startIndex+index,textWrapper=document.createElement("div");textWrapper.style.display="flex",textWrapper.style.justifyContent="space-between",textWrapper.style.padding="0.5rem",textWrapper.style.border="1px solid #CCCCCC";const label=document.createElement("span");label.appendChild(document.createTextNode(doughnutData.labels[dataIndex]));const value=document.createElement("span");value.appendChild(document.createTextNode(this.formatUtilitiesService.formatValueAndRate(doughnutData,dataIndex))),textWrapper.appendChild(label),textWrapper.appendChild(value),tooltip.appendChild(textWrapper)}))}getChartsData(chart){let dataSets=chart.config.data.datasets;return this.isMonoDataSetChart(chart)&&(dataSets=chart.config.data.datasets[0].data),dataSets}isMonoDataSetChart(chart){const{type}=chart.config;return"pie"===type||"doughnut"===type}allDataVisible(chart){let allVisible=!0;return this.getChartsData(chart).forEach(((_data,dataIndex)=>{allVisible=allVisible&&this.isChartDataVisible(chart,dataIndex)})),allVisible}isChartDataVisible(chart,dataIndex){return this.isMonoDataSetChart(chart)?chart.getDataVisibility(dataIndex):chart.isDatasetVisible(dataIndex)}isDefaultWhiteColor(color){return"#00000000"===color}static ctorParameters=()=>[{type:_pattern_service__WEBPACK_IMPORTED_MODULE_0__.s},{type:_format_utilities_service__WEBPACK_IMPORTED_MODULE_1__.D}]};ChartCommonLegendService=(0,tslib__WEBPACK_IMPORTED_MODULE_2__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Injectable)({providedIn:"root"})],ChartCommonLegendService)},"./src/types/tooltip-chart-type.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";var TooltipChartType;__webpack_require__.d(__webpack_exports__,{Y:()=>TooltipChartType}),function(TooltipChartType){TooltipChartType.RADAR="RADAR",TooltipChartType.BAR_CHART="BAR_CHART",TooltipChartType.MIXED_BAR_LINE_CHART="MIXED_BAR_LINE_CHART",TooltipChartType.DETAILS_BAR_CHART="DETAILS_BAR_CHART",TooltipChartType.LINE_CHART="LINE_CHART",TooltipChartType.DOUGHNUT="DOUGHNUT"}(TooltipChartType||(TooltipChartType={}))},"./src/components/line/line-chart.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,LineChartWithSuggestedMinAndSuggestedMax:()=>LineChartWithSuggestedMinAndSuggestedMax,MultipleData:()=>MultipleData,__namedExportsOrder:()=>__namedExportsOrder,default:()=>line_chart_stories});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var line_chart_componentngResource=__webpack_require__("./src/components/line/line-chart.component.scss?ngResource"),line_chart_componentngResource_default=__webpack_require__.n(line_chart_componentngResource),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),mozaic_ds_angular=__webpack_require__("./node_modules/@mozaic-ds/angular/adeo/fesm2020/mozaic-ds-angular.mjs"),ng2_charts=__webpack_require__("./node_modules/ng2-charts/fesm2022/ng2-charts.mjs"),chart_design=__webpack_require__("./src/patterns/chart-design.ts"),generic_tooltip_service=__webpack_require__("./src/services/generic-tooltip.service.ts"),BehaviorSubject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/BehaviorSubject.js"),chart_common_legend_service=__webpack_require__("./src/services/chart-common-legend.service.ts"),tooltip_chart_type=__webpack_require__("./src/types/tooltip-chart-type.ts"),format_utilities_service=__webpack_require__("./src/services/format-utilities.service.ts");let LineChartComponent=class LineChartComponent{chartCommonLegendService;genericTooltipService;formatUtilitiesService;legendContainerElementRef;chartId="radar-chart";tooltipFirstLineLabel="content";tooltipSecondLineLabel="content2";width="200px";height="400px";disableAccessibility=!1;colourSet=0;newPatternsOrder=[0,1,2,3,4,5];lines=[];labels=[];xAxisTitle=null;yAxisTitle=null;suggestedMin=void 0;suggestedMax=void 0;cssClasses=void 0;styles={};plugins=[];lineChartOptions;lineChartPlugins=[];selectMode=new BehaviorSubject.t(!1);legendContainer=new BehaviorSubject.t(null);colourSets=(0,chart_design.A)().colourSets;patternsStandardList=(0,chart_design.A)().patternsStandardList;constructor(chartCommonLegendService,genericTooltipService,formatUtilitiesService){this.chartCommonLegendService=chartCommonLegendService,this.genericTooltipService=genericTooltipService,this.formatUtilitiesService=formatUtilitiesService}ngAfterViewInit(){const htmlLegendPlugin=this.getHtmlLegendPlugin(this.legendContainer,this.selectMode,this.chartCommonLegendService);this.lineChartPlugins.push(...htmlLegendPlugin),this.lineChartOptions={responsive:!0,maintainAspectRatio:!1,plugins:{legend:{display:!1},datalabels:{display:!1},tooltip:{enabled:!1,external:context=>{this.genericTooltipService.createTooltip(context,this.getTooltipData,{chartType:tooltip_chart_type.Y.LINE_CHART,firstLineLabel:this.tooltipFirstLine(),secondLineLabel:this.tooltipSecondLine()},this.patternsColors(),this.patternsOrderedList(),this.disableAccessibility)}}},scales:{x:{offset:!0,title:{display:null!==this.xAxisTitle,text:this.xAxisTitle}},y:{type:"linear",display:!0,title:{display:null!==this.yAxisTitle,text:this.yAxisTitle},suggestedMin:this.suggestedMin,suggestedMax:this.suggestedMax,position:"left",grid:{drawOnChartArea:!0},ticks:{callback:val=>{const unit=this.lines[0].unit;return`${this.formatUtilitiesService.formatWithThousandsSeparators(val)} ${unit??""}`}}}}}}chartData(){return{labels:this.labels.map((label=>label)),datasets:this.lines.map(((line,index)=>({type:"line",borderColor:this.patternsColors()[index],pointStyle:this.getLinePointStyle(index),pointBackgroundColor:"#FFFFFF",pointRadius:5,label:line.label,data:line.data,borderWidth:2})))}}getHtmlLegendPlugin(legendContainer,selectMode,chartCommonLegendService){const createLegendElementWithCheckbox=this.createLegendElementWithCheckbox.bind(this);return[{id:"htmlLegend",afterUpdate(chart){const ul=chartCommonLegendService.getOrCreateLegendList(legendContainer,"column");for(ul.style.display="flex",ul.style.flexDirection="row",ul.style.margin="1.375rem 1.0625rem";ul.firstChild;)ul.firstChild.remove();chart.options.plugins.legend.labels.generateLabels(chart).forEach((item=>{const li=chartCommonLegendService.createHtmlLegendListElement(chart,selectMode,item.datasetIndex);let liContent;liContent=selectMode.value?createLegendElementWithCheckbox(chart,item):chartCommonLegendService.createLegendElementWithSquareArea(item),liContent.style.boxSizing="border-box",li.style.marginRight="10px",li.appendChild(liContent),li.appendChild(chartCommonLegendService.createHtmlLegendItemText(item)),ul.appendChild(li)}))}}]}createLegendElementWithCheckbox(chart,item){const liContent=this.chartCommonLegendService.createLegendCheckbox(chart,item,null);return liContent.onclick=e=>{this.chartCommonLegendService.switchItemVisibility(chart,item.datasetIndex,this.selectMode),e.stopPropagation()},liContent}patternsColors(){return 6!==this.newPatternsOrder.length?this.colourSets[this.colourSet]:this.newPatternsOrder.map((id=>this.colourSets[this.colourSet][id]))}patternsOrderedList(){return this.newPatternsOrder.length!==this.patternsStandardList.length?this.patternsStandardList:this.newPatternsOrder.map((id=>this.patternsStandardList[id]))}getTooltipData(context){const datasetIndex=context.tooltip.dataPoints[0].datasetIndex,dataIndex=context.tooltip.dataPoints[0].dataIndex,formattedValue=this.lines[datasetIndex].data[dataIndex].toFixed(2);return this.lines[datasetIndex].unit?formattedValue+" "+this.lines[datasetIndex].unit:formattedValue}tooltipFirstLine(){return this.tooltipFirstLineLabel}tooltipSecondLine(){return this.tooltipSecondLineLabel}getLinePointStyle(index){return 1===index?"circle":"rectRot"}static ctorParameters=()=>[{type:chart_common_legend_service.qR},{type:generic_tooltip_service.w},{type:format_utilities_service.D}];static propDecorators={legendContainerElementRef:[{type:core.ViewChild,args:["legendContainer",{read:core.ElementRef}]}],chartId:[{type:core.Input}],tooltipFirstLineLabel:[{type:core.Input}],tooltipSecondLineLabel:[{type:core.Input}],width:[{type:core.Input}],height:[{type:core.Input}],disableAccessibility:[{type:core.Input}],colourSet:[{type:core.Input}],newPatternsOrder:[{type:core.Input}],lines:[{type:core.Input}],labels:[{type:core.Input}],xAxisTitle:[{type:core.Input}],yAxisTitle:[{type:core.Input}],suggestedMin:[{type:core.Input}],suggestedMax:[{type:core.Input}],cssClasses:[{type:core.Input}],styles:[{type:core.Input}],plugins:[{type:core.Input}]}};LineChartComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"moz-ng-line-chart",standalone:!0,imports:[ng2_charts.FR,common.CommonModule,mozaic_ds_angular.q4],template:'<div class="container">\r\n  <div class="main" [ngStyle]="{ width: width, height: height }">\r\n    <canvas\r\n      baseChart\r\n      [id]="chartId"\r\n      [data]="chartData()"\r\n      [options]="lineChartOptions"\r\n      [plugins]="lineChartPlugins"\r\n      [type]="\'line\'"\r\n    >\r\n    </canvas>\r\n  </div>\r\n  <moz-checkbox style="display: none"></moz-checkbox>\r\n  <div #legendContainer></div>\r\n</div>\r\n',styles:[line_chart_componentngResource_default()]})],LineChartComponent);const line_chart_stories={title:"Charts/Line",component:LineChartComponent,tags:["autodocs"]},Default={args:{width:"600px",height:"400px",labels:["Data One","Data Two","Data Three"],lines:[{label:"Data One",data:[-22,34,11],unit:"%"},{label:"Data Two",data:[-3,28,35],unit:"%"}],xAxisTitle:"X Axis Title",yAxisTitle:"Y Axis Title"}},MultipleData={args:{width:"600px",height:"400px",labels:["Data One","Data Two","Data Three","Data Four","Data Five","Data Six"],lines:[{label:"Data One",data:[-22,34,11,1,22,21],unit:"%"},{label:"Data Two",data:[-3,28,35,10,3,18],unit:"%"}]}},LineChartWithSuggestedMinAndSuggestedMax={args:{width:"600px",height:"400px",labels:["Data One","Data Two","Data Three"],lines:[{label:"Data One",data:[20,34,11],unit:"€"},{label:"Data Two",data:[45,28,35],unit:"€"}],xAxisTitle:"X Axis Title",yAxisTitle:"Y Axis Title",suggestedMin:0,suggestedMax:50}},__namedExportsOrder=["Default","MultipleData","LineChartWithSuggestedMinAndSuggestedMax"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    width: "600px",\n    height: "400px",\n    labels: ["Data One", "Data Two", "Data Three"],\n    lines: [{\n      label: "Data One",\n      data: [-22, 34, 11],\n      unit: "%"\n    }, {\n      label: "Data Two",\n      data: [-3, 28, 35],\n      unit: "%"\n    }],\n    xAxisTitle: "X Axis Title",\n    yAxisTitle: "Y Axis Title"\n  }\n} satisfies Story',...Default.parameters?.docs?.source}}},MultipleData.parameters={...MultipleData.parameters,docs:{...MultipleData.parameters?.docs,source:{originalSource:'{\n  args: {\n    width: "600px",\n    height: "400px",\n    labels: ["Data One", "Data Two", "Data Three", "Data Four", "Data Five", "Data Six"],\n    lines: [{\n      label: "Data One",\n      data: [-22, 34, 11, 1, 22, 21],\n      unit: "%"\n    }, {\n      label: "Data Two",\n      data: [-3, 28, 35, 10, 3, 18],\n      unit: "%"\n    }]\n  }\n} satisfies Story',...MultipleData.parameters?.docs?.source}}},LineChartWithSuggestedMinAndSuggestedMax.parameters={...LineChartWithSuggestedMinAndSuggestedMax.parameters,docs:{...LineChartWithSuggestedMinAndSuggestedMax.parameters?.docs,source:{originalSource:'{\n  args: {\n    width: "600px",\n    height: "400px",\n    labels: ["Data One", "Data Two", "Data Three"],\n    lines: [{\n      label: "Data One",\n      data: [20, 34, 11],\n      unit: "€"\n    }, {\n      label: "Data Two",\n      data: [45, 28, 35],\n      unit: "€"\n    }],\n    xAxisTitle: "X Axis Title",\n    yAxisTitle: "Y Axis Title",\n    suggestedMin: 0,\n    suggestedMax: 50\n  }\n} satisfies Story',...LineChartWithSuggestedMinAndSuggestedMax.parameters?.docs?.source}}}},"./src/components/line/line-chart.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,'.container {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-weight: 400;\n  font-family: "Roboto", sans-serif;\n}\n\n.main {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);